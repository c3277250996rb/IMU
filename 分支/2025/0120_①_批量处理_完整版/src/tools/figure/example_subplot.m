% ``` m
x = 0:0.1:10; % 定义x轴数据
y1 = sin(x);  % 第一张图的数据
y2 = cos(x);  % 第二张图的数据

figure_hold_box();
subplot(1,2,1); % 将窗口分为2行1列，定位到第1个区域
plot(x, y1);    % 绘制第一张图
title('y = sin(x)'); % 添加标题

subplot(1,2,2); % 定位到第2个区域
plot(x, y2);    % 绘制第二张图
title('y = cos(x)'); % 添加标题
% ```

% 这段代码使用了MATLAB的 `subplot` 函数来在同一个窗口中显示两个图。以下是详细的解释：

% ### 1. `x = 0:0.1:10;`
% 这行代码定义了 `x` 轴的数据，使用 `0:0.1:10` 表示从 0 开始，以 0.1 为步长，到达 10 的数值。生成的 `x` 是一个包含 101 个数的向量，表示从 0 到 10 的一系列数值，步长为 0.1。

% ### 2. `y1 = sin(x);` 和 `y2 = cos(x);`
% 这两行代码根据 `x` 的值计算了 `y1` 和 `y2`：
% - `y1 = sin(x)`：计算每个 `x` 值对应的正弦值，生成 `y1`。
% - `y2 = cos(x)`：计算每个 `x` 值对应的余弦值，生成 `y2`。

% 这样 `y1` 和 `y2` 就分别表示了 `sin(x)` 和 `cos(x)` 的值。

% ### 3. `subplot(2,1,1);`
% `subplot(m, n, p)` 是用来将画布分为 `m` 行 `n` 列的多个子图，并定位到第 `p` 个子图。  
% 在这里，`subplot(2, 1, 1)` 将图形窗口分为 2 行 1 列，定位到第一个区域（即窗口的上半部分）。

% ### 4. `plot(x, y1);`
% `plot(x, y1)` 用来绘制图形，横坐标是 `x`，纵坐标是 `y1`，即绘制的是 `y = sin(x)` 的曲线。

% ### 5. `title('y = sin(x)');`
% `title('y = sin(x)')` 为当前的子图添加标题，表示这张图是 `y = sin(x)`。

% ### 6. `subplot(2,1,2);`
% `subplot(2, 1, 2)` 切换到第二个子图区域，定位到画布的下半部分。

% ### 7. `plot(x, y2);`
% `plot(x, y2)` 用来绘制第二张图，横坐标是 `x`，纵坐标是 `y2`，即绘制的是 `y = cos(x)` 的曲线。

% ### 8. `title('y = cos(x)');`
% `title('y = cos(x)')` 为第二张图添加标题，表示这张图是 `y = cos(x)`。

% ### 总结
% 这段代码将窗口分为两行，第一行显示 `y = sin(x)` 的图，第二行显示 `y = cos(x)` 的图。`subplot` 是为了在一个窗口中显示多个图形，避免过多的窗口打开，方便比较不同图形的内容。